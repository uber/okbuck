apply plugin: "com.android.application"
apply plugin: "com.jakewharton.butterknife"

android {
    defaultConfig {
        applicationId "com.uber.okbuck.app"
        multiDexEnabled true
        buildConfigField "boolean", "CAN_JUMP", "true"
        buildConfigField "int", "EXOPACKAGE_FLAGS", "0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // If app doesn't specify dimensions, use missingDimensionStrategy
        // https://developer.android.com/studio/build/gradle-plugin-3-0-0-migration.html#resolve_matching_errors
        missingDimensionStrategy "tier", "free", "paid"
    }

    flavorDimensions "default"

    productFlavors {
        dev {
            buildConfigField "boolean", "CAN_JUMP", "true"
            applicationIdSuffix = ".dev"
            buildConfigField "int", "EXOPACKAGE_FLAGS", "1"
        }
        prod {
            buildConfigField "boolean", "CAN_JUMP", "false"
            applicationIdSuffix = ".prod"
        }
        demo {
            buildConfigField "boolean", "CAN_JUMP", "false"
            applicationIdSuffix = ".demo"
            buildConfigField "int", "EXOPACKAGE_FLAGS", "1"
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "DEBUG_CONFIG", "true"
            applicationIdSuffix = ".debug"
        }
        release {
            buildConfigField "boolean", "CAN_JUMP", "true"
            buildConfigField "boolean", "DEBUG_CONFIG", "false"
        }
    }
}

repositories {
    flatDir {
        dirs "aars"
    }
}

dependencies {
    compileOnly deps.apt.autoValueAnnotations
    compileOnly deps.external.annotationApi

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation(name: "rxscreenshotdetector-1.2.0", ext: "aar")
    implementation deps.external.rxjava
    implementation deps.external.rxandroid
    implementation deps.external.butterKnife

    implementation deps.androidx.multidex
    implementation deps.androidx.material
    implementation deps.androidx.activity
    implementation deps.androidx.recyclerView

    implementation deps.external.leakCanary

    implementation project(":libraries:emptylibrary")
    implementation project(":libraries:kotlinandroidlibrary")
    implementation project(":dummylibrary")

    annotationProcessor deps.apt.autoValue
    annotationProcessor deps.apt.autoValueAnnotations
    annotationProcessor deps.apt.butterKnifeCompiler
    annotationProcessor deps.apt.daggerCompiler
    annotationProcessor deps.apt.autoValueGson

    testImplementation deps.test.junit
    testImplementation deps.test.mockito
    testImplementation deps.androidx.annotations

    androidTestImplementation deps.test.espressoCore
    androidTestImplementation deps.test.espressoRules
    androidTestImplementation deps.test.espressoRunner
}

android.testVariants.all { variant ->
    variant.getCompileConfiguration().exclude group: "com.android.support", module: "support-annotations"
    variant.getRuntimeConfiguration().exclude group: "com.android.support", module: "support-annotations"
}

afterEvaluate {
    tasks.withType(JavaCompile) { JavaCompile javaCompile ->
        javaCompile.options.compilerArgs << "-Xlint:deprecation"
    }
}
